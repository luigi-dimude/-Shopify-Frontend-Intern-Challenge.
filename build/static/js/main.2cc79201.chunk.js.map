{"version":3,"sources":["components/SearchMovie.js","components/Movie.js","components/MovieList.js","components/Alert.js","components/modal.js","App.js","reportWebVitals.js","index.js"],"names":["Search","search","useState","text","setText","onSubmit","e","preventDefault","alert","id","className","onChange","target","value","type","placeholder","Movie","title","year","runTime","genre","poster","addMovie","disableButton","style","backgroundImage","disabled","onClick","MovieList","list","deleteMovie","viewMovie","map","movie","movieTitle","handleView","handleDelete","Alert","message","Modal","movieDetails","closeModal","moviePoster","movieYear","movieRuntime","movieGenre","App","setmovieTitle","setmovieYear","setmovieRuntime","setmovieGenre","setMoviePoster","setAlert","alertMessage","setAlertMessage","listLenght","setListLenght","movieList","setMovieList","addedMovie","setAddedMovie","viewModal","setViewModal","modalMovie","setModalMovie","searchMovie","movieSearched","a","axios","get","res","data","Title","Year","Runtime","Genre","Poster","console","log","useEffect","some","length","displayAlert","setTimeout","uuidv4","prev","movieID","newList","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cc79201.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Search = ({search}) => {\n\n\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (text === '') {\n      alert('Please enter an input');\n    } else {\n      search(text);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} id='search-movie' className='form'>\n      <input \n      className='search-bar' \n      onChange={onChange} value={text} \n      type='text' \n      placeholder='Search for movie here..'/>\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nconst Movie = ({title, year, runTime, genre, poster, addMovie, disableButton}) => {\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    addMovie();\n\n\n  }\n  return (\n    <div id='movie'>\n      <div className='card'>\n      <div className='banner' style={{backgroundImage : `url(${poster})`}}></div>\n          <div className='info'>\n            <p><span>Title: </span><em id='movie-title'>{title}</em></p>\n            <p><span>Year: </span><em id='movie-year'>{year}</em></p>\n            <p><span>Runtime: </span><em id='movie-runtime'>{runTime}</em></p>\n            <p><span>Genre: </span><em id='movie-genre'>{genre}</em></p>\n            <button className={disableButton ? 'disabled' : ''} disabled={disableButton ? true : false} onClick={handleClick}>Add movie</button>\n          </div>\n    </div>\n    </div>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nconst MovieList = ({list, deleteMovie, viewMovie}) => {\n\n  const handleDelete = (movie) => {\n    deleteMovie(movie);\n  }\n  const handleView = (movie) => {\n    viewMovie(movie);\n  }\n\n  return (\n    <div id='movie-list'>\n    <div className='container'>\n        <div className='insert-banner'>\n\n        </div>\n       <table>\n        <thead>\n            <tr>\n                <th>Title</th>\n                <th>Add/Remove</th>\n            </tr>\n        </thead>\n        <tbody id='tbody'>\n              {list.map(movie => \n                <tr key={movie.id}>\n                <td>{movie.movieTitle}</td>\n                <td><button onClick={() => handleView(movie)} className='btn-view'>View</button> <i className='fas fa-times deleteEmp' onClick={() => handleDelete(movie.id)}></i></td>\n            </tr>   \n            )}\n        </tbody>\n       </table>\n    </div>\n</div>\n  );\n  \n};\n\nexport default MovieList;\n","import React from 'react';\n\nconst Alert = ({message}) => {\n\n  return (\n    alert !== null && <div className='message'>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default Alert;\n","import React from 'react';\n\nconst Modal = ({movieDetails, closeModal}) => {\n\n  const handleClose = (e) => {\n    e.preventDefault();\n    closeModal();\n  }\n\n  return (\n<div id='modal'>\n<div className=\"modal-card\">\n    <div id='close-modal' onClick={handleClose}><i className=\"fas fa-times close-modal\"></i></div>\n    <div className=\"modal-info\">\n        <div id=\"modal-img\" style={{backgroundImage : `url(${movieDetails.moviePoster})`}}>\n         </div>\n   \n        <p id=\"modal-title\">{movieDetails.movieTitle}</p>\n        <p id=\"modal-year\">{movieDetails.movieYear}</p>\n        <p id=\"modal-runtime\">{movieDetails.movieRuntime}</p>\n        <p id=\"modal-genre\">{movieDetails.movieGenre}</p>\n    </div>\n</div>\n</div>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Search from './components/SearchMovie';\nimport Movie from './components/Movie';\nimport MovieList from './components/MovieList';\nimport Alert from './components/Alert';\nimport { v4 as uuidv4 } from 'uuid';\nimport Modal from './components/modal';\n\n\nconst App = () => {\n\n  // State\n  const [movieTitle, setmovieTitle] = useState('');\n  const [movieYear, setmovieYear] = useState('');\n  const [movieRuntime, setmovieRuntime] = useState('');\n  const [movieGenre, setmovieGenre] = useState('');\n  const [moviePoster, setMoviePoster] = useState('');\n  const [alert, setAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [listLenght, setListLenght] = useState(0);\n  const [movieList, setMovieList] = useState([]);\n\n  // Checks to see if movie is added in list - disables or enables button\n  const [addedMovie, setAddedMovie] = useState(false);\n\n  // Toggle modal to view current movie\n  const [viewModal, setViewModal] = useState(false);\n  const [modalMovie, setModalMovie] = useState([]);\n  \n  // var apiKey = '635293c0';\n  // var url_omdb = 'https://www.omdbapi.com/?apikey=' + apiKey + '&t=' + search_bar;\n  const searchMovie = async movieSearched => {\n\n    try {\n      const res = await axios.get(\n        `https://www.omdbapi.com/?apikey=635293c0&t=${movieSearched}`\n      );\n        setmovieTitle(res.data.Title);\n        setmovieYear(res.data.Year);\n        setmovieRuntime(res.data.Runtime);\n        setmovieGenre(res.data.Genre);\n        setMoviePoster(res.data.Poster);\n    }\n    catch(error) {\n      console.log('No movie found');\n    }\n\n      \n  }\n\n  // Checks to see if movie is added in list - disables or enables button\n  useEffect(() => {   \n      movieList.some(movie => movie.movieTitle ===  movieTitle) || movieList.length >= 5 ? setAddedMovie(true) : setAddedMovie(false);\n\n  }, [movieList, movieTitle]);\n\n  // Checks to see if movie was added or deleted - shows a banner/alert\n  useEffect(() => {\n   \n    if (movieList.length === 5) {\n      setAlertMessage('Nomination list complete!');\n      displayAlert();\n    }\n    else if (movieList.length > listLenght) {\n      setAlertMessage('movie added!');\n      displayAlert();\n    } \n    else if (listLenght > movieList.length) {\n      setAlertMessage('movie deleted!');\n      displayAlert();\n    }\n    setListLenght(movieList.length);\n\n}, [movieList, setMovieList, listLenght]);\n\n\n// Displays banner/alert for few seconds with message\nconst displayAlert = () => {\n  setAlert(true);\n\n  setTimeout(() => {\n    setAlert(false);\n}, 1500);\n}\n\n// Add movie to the list\n  const addMovieToList = () => {\n\n    const movie = {id: uuidv4(), movieTitle, movieYear, movieRuntime, movieGenre, moviePoster};\n    setMovieList(prev => ([...prev, movie]));\n    // Disables button when adding it to list\n    setAddedMovie(false);\n  }\n\n  // Deletes movie from list \n  const deleteMovieFromList = (movieID) => {\n    const newList = movieList.filter(movie => movie.id !== movieID);\n    setMovieList(newList);\n  }\n\n  // View movie from list - Opens modal\n  const viewMovieFromList = (movie) => {\n\n    setModalMovie(movie);\n    setViewModal(true);\n  }\n\n  // Closes the modal\n  const closeModal = () => {\n    setViewModal(false);\n  }\n\n \n\n  return (\n    <div className='App'> \n     <Search search={searchMovie}/>\n      {movieTitle &&  <Movie title={movieTitle} year={movieYear} runTime={movieRuntime} genre={movieGenre} addMovie={addMovieToList} poster={moviePoster} disableButton={addedMovie} />}\n      <div className='insert-banner'>\n      {alert && <Alert message={alertMessage}/>}\n      </div>\n     <MovieList list={movieList} deleteMovie={deleteMovieFromList} viewMovie={viewMovieFromList} />\n     {viewModal && <Modal movieDetails={modalMovie} closeModal={closeModal} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}